{"version":3,"sources":["scripts/main.js"],"names":["numberOfColumn","table","document","querySelector","tableHead","tHead","rows","headCells","cells","bodyRows","tBodies","addEventListener","event","point","elementFromPoint","clientX","clientY","i","length","sortedTable","sort","a","b","firstValue","innerHTML","secondValue","firstNumber","parseInt","replace","secondNumber","isNaN","row","append"],"mappings":";AAAA,aAQA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EANA,IAIIA,EAJEC,EAAQC,SAASC,cAAc,SAC/BC,EAAYH,EAAMI,MAAMC,KAAK,GAC7BC,EAAYH,EAAUI,MACtBC,EAAWR,EAAMS,QAAQ,GAAGJ,KAGlCF,EAAUO,iBAAiB,QAAS,SAAAC,GAG7B,IAFCC,IAAAA,EAAQX,SAASY,iBAAiBF,EAAMG,QAASH,EAAMI,SAEpDC,EAAI,EAAGA,EAAIV,EAAUW,OAAQD,IAChCV,EAAUU,KAAOJ,IACnBb,EAAiBiB,GAIfE,IATqC,EA8BzBA,EAAAA,EArBE,EAAIV,GAAUW,KAAK,SAACC,EAAGC,GACnCC,IAAAA,EAAaF,EAAEb,MAAMR,GAAgBwB,UACrCC,EAAcH,EAAEd,MAAMR,GAAgBwB,UACtCE,EAAcC,SAAUJ,EAAYK,QAAQ,OAAQ,KACpDC,EAAeF,SAAUF,EAAaG,QAAQ,OAAQ,KAExDE,OAAAA,MAAMJ,IAAgBI,MAAMD,GAC1BN,EAAaE,EACR,EAGLF,EAAaE,GACP,EAGH,EAEAC,EAAcG,KA1BkB,IA8BZ,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAApBE,IAAAA,EAAoB,EAAA,MAC7B9B,EAAMS,QAAQ,GAAGsB,OAAOD,IA/BiB,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA","file":"main.67af0417.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nconst tableHead = table.tHead.rows[0];\nconst headCells = tableHead.cells;\nconst bodyRows = table.tBodies[0].rows;\nlet numberOfColumn;\n\ntableHead.addEventListener('click', event => {\n  const point = document.elementFromPoint(event.clientX, event.clientY);\n\n  for (let i = 0; i < headCells.length; i++) {\n    if (headCells[i] === point) {\n      numberOfColumn = i;\n    }\n  }\n\n  const sortedTable = [...bodyRows].sort((a, b) => {\n    const firstValue = a.cells[numberOfColumn].innerHTML;\n    const secondValue = b.cells[numberOfColumn].innerHTML;\n    const firstNumber = parseInt((firstValue).replace(/\\D+/g, ''));\n    const secondNumber = parseInt((secondValue).replace(/\\D+/g, ''));\n\n    if (isNaN(firstNumber) || isNaN(secondNumber)) {\n      if (firstValue > secondValue) {\n        return 1;\n      }\n\n      if (firstValue < secondValue) {\n        return -1;\n      }\n\n      return 0;\n    } else {\n      return firstNumber - secondNumber;\n    }\n  });\n\n  for (const row of sortedTable) {\n    table.tBodies[0].append(row);\n  }\n});\n"]}